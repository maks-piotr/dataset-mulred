{
    "id": "13iv15q",
    "title": "[Serious] Is it possible to get into software engineering role after 10 years? Your advice will be greatly appreciated.",
    "url": "https://www.reddit.com/r/india/comments/13iv15q/serious_is_it_possible_to_get_into_software/",
    "selftext": "This is a continuation of an earlier [post](https://www.reddit.com/r/india/comments/10tg0pu/serious_is_it_possible_to_get_into_a_software/?utm_source=share&utm_medium=android_app&utm_name=androidcss&utm_term=3&utm_content=share_button). (I'm a mechanical engineer, working as a manufacturing engineer since the last 10 years and I've been thinking about getting into software/electronics. I'm mainly interested in Robotics.)\n\nI've thought through this and I've decided to take up embedded systems programming. Right now, the only viable way of doing this (that I'm aware of) is to get into a classroom course (like [this one](https://iies.in/certification-courses-freshers/embedded-system-course-with-placement/) offered by IIES) since I also need a nominal guarantee of getting a job once I complete the course. My 2 year plan is to get into an MS in Robotics after this.\n\nCould you people be so kind to offer some legit advice on my plan of approach - like how sound my plan sounds, potential pitfalls etc? This would be a serious career change for me (or anyone for that matter) and would have life altering consequences.\n\nYour advice would be greatly appreciated. Thank you in advance.",
    "flair": "AskIndia",
    "score": 6,
    "num_comments": 15,
    "created_utc": 1684211690.0,
    "convurl": "https://external-preview.redd.it/fUOqErBJ9yZ5aeeQaC8iEw9W6lIIV5-oUwSVXaI_95U.jpg?auto=webp&v=enabled&s=7af252829c1b2a50545be4ec1594df3a86b42b5e",
    "comments": [
        "Yes.",
        "Why IIES + job instead of directly doing MS in Robotics?",
        "1. Right now, I don't have any relevant work experience related to robotics. I'm working on a personal project for that.\n2. I'm required to know embedded systems if I'm to get into robotics anyway.\n\nSo, if I get into a course into embedded systems, get placed and work for a while, I'd have a relevant experience, along with the project I'm working on, to apply for an MS. That's the plan.\n\nAny suggestions?",
        "> I'm required to know embedded systems \n\nWhile I agree that it's a good-to-have, I don't see it listed as a prerequisite. I checked CMU and UPenn curricula just as examples.\n\nI asked because embedded systems is a low level of abstraction (and not just limited to robotics) while robotics in general is a higher level of abstraction (that also involves embedded systems at the bottom layers of the stack). \n\nThe course and possible job may turn out to be not that directly relevant to robotics. If a person had zero work experience, it's fine. But since you already have lengthy work experience, I wondered why that indirect route. It's your choice, of course, but maybe consider a direct route straight to MS.",
        "I'm glad that we're having this conversation. I'm stuck in a position where I still think my current profile is not strong enough to warrant an admit if I were to apply. This is the reason why I've been putting forward MS applications for the last 6 years. You're challenging my assumption and that's the good thing.\n\nI'm truly afraid that the paper pusher job might not provide much strength to my application and that is why I'm trying this apparently roundabout route (along with the project I'm working on). Maybe I'm overthinking this. I've therefore planned to go to an education conselor to talk about this tomorrow.\n\nComing to embedded systems, like I mentioned before, it offers me two advantages - \n1. A good thing to have for MS robotics application.\n2. If the first option were to fail, I'll have a better career in the future compared to the one I have right now.\n\nAlso, even though embedded is not a hard requirement for the MS application itself, it's an almost must-have if you're to build a physical robot (which I'm doing right now) for programming the controller.\n\nRegardless, as you said it's not a hard requirement. I'm anyway determined to apply starting this year after completing my project.",
        "Apply and do the course where ever you get admitted. All this delaying to do this and that and build up usually doesnt work. Go for it and finish it and move to other side.",
        "This is what my conscience is telling me of late. You're right.",
        "I am ways right. That's what I tell my spouse. On serious note, there are many paths of reaching where you want to go, but education is a must. Best uni or not, us or Australia or Canada or Germany matters less. Most of the unis do great job of teaching. Learn it, get a job, then apply learning there and then you go from there. Getting into best uni is not most imp.",
        "You're right again. I've heard this advice more than once before. I'm suffering what is called paralysis by analysis.",
        "You‚Äôre already an engineer. Congratulations (no sarcasm), you should already have analytical abilities and problem solving skills.\n\nLearning to write code isn‚Äôt a big deal. But please be prepared to be an absolute sponge. You‚Äôre entering a new field and an intensive course. Soak it in. Good luck.\n\nThe syllabus of this course seems pretty decent. Please treat it as a starting point and do your own research / exploration. Write as much as you can.\n\nI feel practical hands on learning > classroom learning. But it‚Äôs not that classroom learning is value-less. Learning about data structures & algorithms in a class might be useful for you. Then there‚Äôs topics like networking and operating systems (esp embedded OSes), which might be useful.\n\nAdvice:\n\n1) create a GitHub account and fill it with as many mini projects as you can. Do at least one interesting ‚Äúcapstone‚Äù type project. This way you‚Äôll have a neat portfolio to show off to your future interviewers.\n\n2) please understand how a computer work‚Äôs fundamentally: how is memory allocated. What happens in a clock cycle. Many developers don‚Äôt know this and write atrocious code as a result. But this is especially useful in embedded.\n\n3) it‚Äôs interesting a lot of the syllabus uses C. Makes sense, but C gives you plenty of weapons to shoot yourself with. Try and learn ways to defend against writing bad C code.\n\n4) C++: it‚Äôs often overly complicated for many projects. Use with caution, although it‚Äôs definitely useful in very large projects. But there‚Äôs a reason [Rust](https://docs.rust-embedded.org/book/) is [increasingly](https://www.designnews.com/embedded-systems/3-reasons-use-rust-embedded-systems) popular for embedded ‚Äî here‚Äôs an [engineer‚Äôs view](https://tweedegolf.nl/en/blog/39/why-rust-is-a-great-fit-for-embedded-software).",
        "Thank you for the clear and concise advice üôèüôèüôè\n\nWould you mind if I DM you if I have some doubts.",
        "I‚Äôm not sure I can help with embedded-specific queries, but for general CS queries, I may be able to provide pointers.",
        "Alright üëç"
    ],
    "cleaned_text": "serious possible get software engineering role years advice greatly appreciated continuation earlier posthttpswwwredditcomrindiacommentstgpuseriousisitpossibletogetintoasoftwareutmsourceshareutmmediumandroidapputmnameandroidcssutmtermutmcontentsharebutton im mechanical engineer working manufacturing engineer since last years ive thinking getting softwareelectronics im mainly interested robotics ive thought ive decided take embedded systems programming right viable way im aware get classroom course like onehttpsiiesincertificationcoursesfreshersembeddedsystemcoursewithplacement offered iies since also need nominal guarantee getting job complete course year plan get ms robotics could people kind offer legit advice plan approach like sound plan sounds potential pitfalls etc would serious career change anyone matter would life altering consequences advice would greatly appreciated thank advance ",
    "cleaned_title": "serious possible get software engineering role years advice greatly appreciated",
    "cleaned_selftext": "continuation earlier posthttpswwwredditcomrindiacommentstgpuseriousisitpossibletogetintoasoftwareutmsourceshareutmmediumandroidapputmnameandroidcssutmtermutmcontentsharebutton im mechanical engineer working manufacturing engineer since last years ive thinking getting softwareelectronics im mainly interested robotics ive thought ive decided take embedded systems programming right viable way im aware get classroom course like onehttpsiiesincertificationcoursesfreshersembeddedsystemcoursewithplacement offered iies since also need nominal guarantee getting job complete course year plan get ms robotics could people kind offer legit advice plan approach like sound plan sounds potential pitfalls etc would serious career change anyone matter would life altering consequences advice would greatly appreciated thank advance",
    "cleaned_comments": "yes iies job instead directly ms robotics right dont relevant work experience related robotics im working personal project im required know embedded systems im get robotics anyway get course embedded systems get placed work id relevant experience along project im working apply ms thats plan suggestions im required know embedded systems agree goodtohave dont see listed prerequisite checked cmu upenn curricula examples asked embedded systems low level abstraction limited robotics robotics general higher level abstraction also involves embedded systems bottom layers stack course possible job may turn directly relevant robotics person zero work experience fine since already lengthy work experience wondered indirect route choice course maybe consider direct route straight ms im glad conversation im stuck position still think current profile strong enough warrant admit apply reason ive putting forward ms applications last years youre challenging assumption thats good thing im truly afraid paper pusher job might provide much strength application im trying apparently roundabout route along project im working maybe im overthinking ive therefore planned go education conselor talk tomorrow coming embedded systems like mentioned offers two advantages good thing ms robotics application first option fail ill better career future compared one right also even though embedded hard requirement ms application almost musthave youre build physical robot im right programming controller regardless said hard requirement im anyway determined apply starting year completing project apply course ever get admitted delaying build usually doesnt work go finish move side conscience telling late youre right ways right thats tell spouse serious note many paths reaching want go education must best uni us australia canada germany matters less unis great job teaching learn get job apply learning go getting best uni imp youre right ive heard advice im suffering called paralysis analysis youre already engineer congratulations sarcasm already analytical abilities problem solving skills learning write code isnt big deal please prepared absolute sponge youre entering new field intensive course soak good luck syllabus course seems pretty decent please treat starting point research exploration write much feel practical hands learning classroom learning classroom learning valueless learning data structures algorithms class might useful theres topics like networking operating systems esp embedded oses might useful advice create github account fill many mini projects least one interesting capstone type project way youll neat portfolio show future interviewers please understand computer works fundamentally memory allocated happens clock cycle many developers dont know write atrocious code result especially useful embedded interesting lot syllabus uses c makes sense c gives plenty weapons shoot try learn ways defend writing bad c code c often overly complicated many projects use caution although definitely useful large projects theres reason rusthttpsdocsrustembeddedorgbook increasinglyhttpswwwdesignnewscomembeddedsystemsreasonsuserustembeddedsystems popular embedded heres engineers viewhttpstweedegolfnlenblogwhyrustisagreatfitforembeddedsoftware thank clear concise advice would mind dm doubts im sure help embeddedspecific queries general cs queries may able provide pointers alright",
    "light_cleaned_title": "[Serious] Is it possible to get into software engineering role after 10 years? Your advice will be greatly appreciated.",
    "light_cleaned_selftext": "This is a continuation of an earlier [post](https://www.reddit.com/r/india/comments/10tg0pu/serious_is_it_possible_to_get_into_a_software/?utm_source=share&utm_medium=android_app&utm_name=androidcss&utm_term=3&utm_content=share_button). (I'm a mechanical engineer, working as a manufacturing engineer since the last 10 years and I've been thinking about getting into software/electronics. I'm mainly interested in Robotics.) I've thought through this and I've decided to take up embedded systems programming. Right now, the only viable way of doing this (that I'm aware of) is to get into a classroom course (like [this one](https://iies.in/certification-courses-freshers/embedded-system-course-with-placement/) offered by IIES) since I also need a nominal guarantee of getting a job once I complete the course. My 2 year plan is to get into an MS in Robotics after this. Could you people be so kind to offer some legit advice on my plan of approach - like how sound my plan sounds, potential pitfalls etc? This would be a serious career change for me (or anyone for that matter) and would have life altering consequences. Your advice would be greatly appreciated. Thank you in advance.",
    "light_cleaned_comments": "Yes. Why IIES + job instead of directly doing MS in Robotics? 1. Right now, I don't have any relevant work experience related to robotics. I'm working on a personal project for that. 2. I'm required to know embedded systems if I'm to get into robotics anyway. So, if I get into a course into embedded systems, get placed and work for a while, I'd have a relevant experience, along with the project I'm working on, to apply for an MS. That's the plan. Any suggestions? > I'm required to know embedded systems While I agree that it's a good-to-have, I don't see it listed as a prerequisite. I checked CMU and UPenn curricula just as examples. I asked because embedded systems is a low level of abstraction (and not just limited to robotics) while robotics in general is a higher level of abstraction (that also involves embedded systems at the bottom layers of the stack). The course and possible job may turn out to be not that directly relevant to robotics. If a person had zero work experience, it's fine. But since you already have lengthy work experience, I wondered why that indirect route. It's your choice, of course, but maybe consider a direct route straight to MS. I'm glad that we're having this conversation. I'm stuck in a position where I still think my current profile is not strong enough to warrant an admit if I were to apply. This is the reason why I've been putting forward MS applications for the last 6 years. You're challenging my assumption and that's the good thing. I'm truly afraid that the paper pusher job might not provide much strength to my application and that is why I'm trying this apparently roundabout route (along with the project I'm working on). Maybe I'm overthinking this. I've therefore planned to go to an education conselor to talk about this tomorrow. Coming to embedded systems, like I mentioned before, it offers me two advantages - 1. A good thing to have for MS robotics application. 2. If the first option were to fail, I'll have a better career in the future compared to the one I have right now. Also, even though embedded is not a hard requirement for the MS application itself, it's an almost must-have if you're to build a physical robot (which I'm doing right now) for programming the controller. Regardless, as you said it's not a hard requirement. I'm anyway determined to apply starting this year after completing my project. Apply and do the course where ever you get admitted. All this delaying to do this and that and build up usually doesnt work. Go for it and finish it and move to other side. This is what my conscience is telling me of late. You're right. I am ways right. That's what I tell my spouse. On serious note, there are many paths of reaching where you want to go, but education is a must. Best uni or not, us or Australia or Canada or Germany matters less. Most of the unis do great job of teaching. Learn it, get a job, then apply learning there and then you go from there. Getting into best uni is not most imp. You're right again. I've heard this advice more than once before. I'm suffering what is called paralysis by analysis. You‚Äôre already an engineer. Congratulations (no sarcasm), you should already have analytical abilities and problem solving skills. Learning to write code isn‚Äôt a big deal. But please be prepared to be an absolute sponge. You‚Äôre entering a new field and an intensive course. Soak it in. Good luck. The syllabus of this course seems pretty decent. Please treat it as a starting point and do your own research / exploration. Write as much as you can. I feel practical hands on learning > classroom learning. But it‚Äôs not that classroom learning is value-less. Learning about data structures & algorithms in a class might be useful for you. Then there‚Äôs topics like networking and operating systems (esp embedded OSes), which might be useful. Advice: 1) create a GitHub account and fill it with as many mini projects as you can. Do at least one interesting ‚Äúcapstone‚Äù type project. This way you‚Äôll have a neat portfolio to show off to your future interviewers. 2) please understand how a computer work‚Äôs fundamentally: how is memory allocated. What happens in a clock cycle. Many developers don‚Äôt know this and write atrocious code as a result. But this is especially useful in embedded. 3) it‚Äôs interesting a lot of the syllabus uses C. Makes sense, but C gives you plenty of weapons to shoot yourself with. Try and learn ways to defend against writing bad C code. 4) C++: it‚Äôs often overly complicated for many projects. Use with caution, although it‚Äôs definitely useful in very large projects. But there‚Äôs a reason [Rust](https://docs.rust-embedded.org/book/) is [increasingly](https://www.designnews.com/embedded-systems/3-reasons-use-rust-embedded-systems) popular for embedded ‚Äî here‚Äôs an [engineer‚Äôs view](https://tweedegolf.nl/en/blog/39/why-rust-is-a-great-fit-for-embedded-software). Thank you for the clear and concise advice üôèüôèüôè Would you mind if I DM you if I have some doubts. I‚Äôm not sure I can help with embedded-specific queries, but for general CS queries, I may be able to provide pointers. Alright üëç"
}